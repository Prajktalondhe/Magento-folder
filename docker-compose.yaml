version: '3.8'

services:

  php:
    build: ./php
    container_name: php-fpm
    volumes:
      - ./magento:/var/www/html
    networks:
      - magento

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./magento:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - php
    networks:
      - magento

  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --log-bin-trust-function-creators=1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
    volumes:
      - ./data/db:/var/lib/mysql
    networks:
      - magento

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.20
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - magento

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - magento

  varnish:
    image: varnish:stable
    container_name: varnish
    command: ["varnishd", "-F", "-f", "/etc/varnish/default.vcl", "-s", "malloc,256m"]
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl
    ports:
      - "6081:6081"
    depends_on:
      - nginx
    networks:
      - magento

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - magento

networks:
  magento:
    driver: bridge
